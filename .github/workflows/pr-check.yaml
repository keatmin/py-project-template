name: Python package

on:
  pull_request:
    branches:
      - main
    paths:
      - "**.py"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Format check
        run: |
          black --check .

      - name: mypy
        run: mypy

      - name: Lint with flake
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --statistics

      - name: Test with Pytest
        run: python -m pytest tests --cov $cov_dir --cov-report xml --junitxml junit/test-results.xml
        env:
          cov_dir: ${{ project_name }}

      - name: Upload pytest test results
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: pytest-results
          path: junit/test-results.xml

      - uses: 5monkeys/cobertura-action@master
        with:
          path: coverage.xml
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          minimum_coverage: 80
          skip_covered: false
          fail_below_threshold: true
          show_line: true
  docker-build:
    runs-on: ubuntu-latest
    env:
      project_name: ${{ project_name }}
    steps:
      - uses: actions/checkout@v2

      - name: Build docker
        run: docker build . -t ${{ env.project_name }}:test

      - name: Smoke test docker image
        run: |
          docker run --rm {{ env.project_name }}:test
